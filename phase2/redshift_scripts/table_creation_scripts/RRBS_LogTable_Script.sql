----------------------LOG_LANDING_RRBS  
CREATE TABLE IF NOT EXISTS LOG_LANDING_RRBS
(
	 FILE_ID BIGINT  GENERATED BY DEFAULT AS IDENTITY (1,1) ENCODE AZ64
	,SOURCE_SYSTEM VARCHAR(10)   ENCODE LZO
	,FILENAME_ORIG VARCHAR(50)   ENCODE LZO
	,TARGET_SYSTEM VARCHAR(10)   ENCODE LZO
	,FILENAME_TARGET VARCHAR(50)   ENCODE LZO
	,FILE_LANDING_DATE TIMESTAMP WITHOUT TIME ZONE   ENCODE AZ64
	,FILE_REG_DATE TIMESTAMP WITHOUT TIME ZONE  DEFAULT GETDATE() ENCODE AZ64
	,FILECHECKSUM CHAR(32)   ENCODE LZO
	,FILE_ETAG CHAR(32)   ENCODE LZO -- CAN REMOVE IF CHECKSUM IS NOT REDSHIFT GENERATED
	,FILE_SIZE INT   ENCODE AZ64
	,STATUS CHAR(10)   ENCODE LZO
)
DISTSTYLE KEY
DISTKEY(FILE_ID)
;

-------------------------------------------------------------------------------LOG_BATCH_FILES_RRBS
CREATE TABLE uk_rrbs_dm.LOG_BATCH_FILES_RRBS
(
	BATCH_ID INT GENERATED BY DEFAULT AS IDENTITY (1,1) ENCODE AZ64
	, FILE_SOURCE VARCHAR(20) ENCODE LZO 
	, FILE_ID INT ENCODE AZ64
	, FILE_NAME VARCHAR(50) ENCODE LZO
	, BATCH_FROM TIMESTAMP ENCODE AZ64
	, BATCH_TO TIMESTAMP ENCODE AZ64
	, RECORD_COUNT INT  ENCODE AZ64 
  	, DM_NORMAL_count int ENCODE AZ64 -Number of records to be inserted in DM excluding latecdr
	, DM_LATECDR_COUNT INT ENCODE AZ64  --Number of latecdr records to be inserted in DM
	, LDM_LATECDR_COUNT INT ENCODE AZ64  --Number of latecdr records to be inserted in LateDM --updated column name 
	, DM_NORMAL_DBDUPL_COUNT INT ENCODE AZ64  --db duplicate excluding latecdr updated column name
	, DM_LATECDR_DBDUPL_COUNT INT ENCODE AZ64 --db duplicate of latecdr updated column name
	, IS_VALID VARCHAR(20) ENCODE LZO
	, BATCH_CREATETIME TIMESTAMP ENCODE AZ64
)
DISTSTYLE KEY
DISTKEY(BATCH_ID)
;



-------------------------------------------------------------------------------LOG_BATCH_STATUS_RRBS 
CREATE TABLE  UK_RRBS_DM.LOG_BATCH_STATUS_MNO
( --S3_BATCHREADCOUNT =   DATAMART_INSERT_COUNT  + DB_DUPLICATE_COUNT +  INTRABATCH_DUPL_COUNT - INTRABATCH_DIST_DUPL_COUNT
  --S3_BATCHREADCOUNT =   (DM_NORMAL_COUNT + LDM_LATECDR_COUNT) + (DM_NORMAL_DUPL_COUNT + LDM_LATECDR_DUPL_COUNT )+ INTRABATCH_DUPL_COUNT - INTRABATCH_DIST_DUPL_COUNT 
	 BATCH_ID INT ENCODE AZ64
	, S3_BATCHREADCOUNT INT ENCODE AZ64 --COUNT OF TOTAL RECORDS READ FROM S3 IN A BATCH
	, S3_FILECOUNT INT	ENCODE AZ64 --TOTAL NO. OF FILES PROCESSED IN A BATCH
	, INTRABATCH_NEW_NORMAL_COUNT INT ENCODE AZ64 --NEW RECORDS IN THIS BATCH EXCLUDING NEW LATECDR --UPDATE COLUMN NAME
    , INTRABATCH_NEW_LATE_COUNT INT ENCODE AZ64 --NEW UNIQUE LATECDR COUNT --UPDATE COLUMN NAME
	, INTRABATCH_DUPL_COUNT INT ENCODE AZ64 --NUMBER OF DUPLICATES WITHIN BATCH INCLUDING NORMAL AND LATCDR
    , INTRABATCH_DIST_DUPL_COUNT INT ENCODE AZ64 --DISTINCT(INTRABATCH_DUPL_COUNT) INCLUDING NORMAL AND LATCDR
    , INTRABATCH_DEDUPL_STATUS VARCHAR(20) ENCODE LZO --COMPLETE IF ALL THE INTRA READ IS DONE  --UPDATE COLUMN NAME
    , DM_NORMAL_COUNT INT ENCODE AZ64  --DATAMART_INSERT_COUNT FOR UNIQUE NORMAL EXCLUDING LATE CDR (INTRABATCH_NEW_NORMAL_COUNT - DM_NORMAL_DUPL_COUNT )
    , DM_NORMAL_DBDUPL_COUNT INT ENCODE AZ64 --DB DUPLICATE OF NORMAL RECORDS (EXCLUDING LATECDR) --UPDATE COLUMN NAME
    , DM_NORMAL_STATUS VARCHAR(20) ENCODE LZO --COMPLETION OF DB DUPLICATE CHECK
    , LDM_LATECDR_COUNT INT ENCODE AZ64 --NUMBER OF RECORDS TO BE INSERTED IN LATE DATAMART
    , LDM_LATECDR_DBDUPL_COUNT INT ENCODE AZ64 --NUMBER OF LATECDR DB DUPLICATE CHECK
    , LDM_LATECDR_STATUS VARCHAR(20) ENCODE LZO --COMPLETION OF LATECDR DB DUPLICATE CHECK
    , BATCH_START_DT TIMESTAMP  ENCODE AZ64 --BATCH START DATE TIME
	, BATCH_END_DT TIMESTAMP  ENCODE AZ64 --BATCH END DATE TIME
	, BATCH_STATUS VARCHAR(50) ENCODE LZO --DIFFERENT STATUS STARTED/IN PROGRESS/ COMPLETED / ERROR
)
DISTSTYLE KEY
DISTKEY(BATCH_ID)
;

